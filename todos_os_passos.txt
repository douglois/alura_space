1 - instalar virtualEnv e ativar
2 - instalar django dentro da venv
3 - comando para iniciar o projeto > django-admin startproject setup .
4 - python manage.py runserver > start a aplicação
5 - mudar arquivo settings para  > LANGUAGE_CODE = "pt-br" e TIME_ZONE = "America/Sao_Paulo"
6 - instalar python-dotenv
7 - criar um arquivo chamado .env fora da pasta setup.
8 - no arquivo settings, remover a secret_key e colar no arquivo criado
9 - o settings ficara assim > SECRET_KEY = str(os.getenv("SECRET_KEY"))
10 - no settings add o import do "OS" e importar o dotenv > from dotenv import load_dotenv
11 - criar um app no projeto > python manage.py startapp galeria
12 - no arquivo settings na tag INSTALLED_APPS, add galeria.
13 - OBS: Views.py é responsavel por gerenciar tudo que é visual na tela
15 - dentro da pasta galeria criar um arquivo urls.py (colocar todas as rotas do app galeria)
16 - no arquivo urls.py da galeria:	from django.urls import path
					from galeria.views import index

					urlpatterns = [path("", index)]

17 - alterar o arquivo urls.py da pasta setup para > from django.contrib import admin
						     from django.urls import path, include

						     urlpatterns = [
    						     path("admin/", admin.site.urls),
    						     path("", include("galeria.urls")),]

18 - criar uma pasta templates e dentro da templates, criar uma pasta chamada galeria(para colocar os arquivos visuais do app) dentro da pasta principal do projeto
nela ficara todas as paginas html.
19 - criar um arquivo index.html na pasta galeria que está dentro de templates
20 - no arquivo settings, na tag TEMPLATES, há um campo chamado DIRS (diretorio dos arquivos html)
coloque >         "DIRS": [os.path.join(BASE_DIR, 'templates')],
21 - no arquivo views.py inserir > from django.shortcuts import render

				   def index(request):
    				   return render(request, "galeria/index.html")
22 - criar uma pasta static dentro de setup

23 - no arquivo settings add uma tag STATICFILES_DIRS (caminho dos arquivos estaticos estilos, imagens e etc) e add tag STATIC_ROOT (local dos arquivos staticos)
 abaixo de STATIC_URL.

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'setup/static')
]

STATIC_ROOT = os.path.join(BASE_DIR, 'static')

24 - como ja temos html e css prontos, bastou copiar os arquivos para a pasta static

25 - Rodar o comando > python manage.py collectstatic no terminal
26 - no index.html de dentro da pasta galeria, add na linha 1 o seguinte trecho > {%load static%}, onde é referenciado o style.css alterar para
href="{% static '/styles/style.css'%}"> (avisando que ali tem arquivos staticos). Adicionar >"{% static '< no começo de todas as referencias de arquivo
e >'%}"< no final, para que sejam carregas as imagens e arquivos staticos.
26 - Como a aplicação possui duas paginas possiveis a index e quando clicamos em uma imagem, somos direcionados para a pagina imagem.html
criamos um novo arquivo dentro de galeria, chamado imagem.html.
27 - criamos um novo metodo (def imagem) dentro de views.py dentro da galeria
				   def imagem(request):
    				   return render(request, "galeria/imagem.html")




